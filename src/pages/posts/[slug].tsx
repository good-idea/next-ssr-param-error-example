import React from 'react'
import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { GetStaticPaths, GetStaticProps } from 'next'
import { PostData, SharedPageProps } from '@/types'
import { fetchSiteSettings } from '../../lib/fetchSiteSettings'
import { client } from '@/lib/client'
import { posts } from '../../data'

interface PostProps extends SharedPageProps {
  postData: PostData
}

const Post: React.FC<PostProps> = ({ postData }) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1>{postData.title}</h1>
        <p>{postData.body}</p>
      </main>
    </>
  )
}

/**
 * Initial Props
 */

export const getStaticProps: GetStaticProps<PostProps> = async (ctx) => {
  const { params } = ctx
  if (!params?.slug || typeof params.slug !== 'string') {
    return { notFound: true }
  }

  const [postData, siteSettings] = await Promise.all([
    client.getPost(params.slug),
    fetchSiteSettings(),
  ])
  if (!postData) {
    return {
      notFound: true,
      props: { siteSettings },
    }
  }
  return { props: { postData, siteSettings }, revalidate: 10 }
}

export const getStaticPaths: GetStaticPaths = async () => {
  const slugs = Object.keys(posts).slice(0, 3)
  const paths = slugs.map((slug) => ({ params: { slug } }))
  return { paths, fallback: true }
}

export default Post
